<?xml version="1.0" encoding="utf-8"?>
<robot name="puck" xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <material name="Red">
        <color rgba="1.0 0.0 0.0 1"/>
    </material>

    <material name="Green">
        <color rgba="0.0 1.0 0.0 1"/>
    </material>

    <material name="Blue">
        <color rgba="0.0 0.0 1.0 1"/>
    </material>

    <xacro:arg name="puck_name" default="Puck"/>
    <xacro:arg name="parent" default="Puck"/>
    <xacro:arg name="color" default="Red"/>
    <xacro:arg name="collide_bitmask" default="0x03"/>
    <xacro:property name="puck_radius" value="0.03165"/>
    <xacro:property name="puck_height" value="0.0049"/>

    <xacro:property name="restitution" value="0.8"/>
    <xacro:property name="lateral_friction" value="0.02"/>
    <xacro:property name="rolling_friction" value="0.8"/>
    <xacro:property name="spinning_friction" value="0.04"/>

    <xacro:macro name="puck" params="puck_name parent color collide_bitmask">
        <link name="${parent}"/>

        <joint name="{puck_name}_joint" type="fixed">
            <origin xyz="0 0 ${puck_height/2}" rpy="0 0 0"/>
            <parent link="${parent}"/>
            <child link="${puck_name}_link"/>
        </joint>

        <link name="${puck_name}_link">
            <inertial>
                <origin xyz="0 0 0.0" rpy="0 0 0"/>
                <mass value="0.01"/>
                <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="2e-5"/>
            </inertial>
            <visual>
                <origin xyz="0 0 0.0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${puck_radius}" length="${puck_height}"/>
                </geometry>
                <material name="${color}"/>
            </visual>
            <collision>
                <origin xyz="0 0 0.0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${puck_radius}" length="${puck_height}"/>
                </geometry>
            </collision>
            <contact>
                <restitution value="${restitution}"/>
                <lateral_friction value="${lateral_friction}"/>
                <rolling_friction value="0.0"/>
                <spinning_friction value="0.02"/>
            </contact>
        </link>

        <gazebo reference="${parent}">
            <collision>
                <surface>
                    <bounce>
                        <restitution_coefficient>${restitution}</restitution_coefficient>
                        <threshold>0.01</threshold>
                    </bounce>
                    <friction>
                        <!-- For Gazebo Must contain tag ode, mu, mu2, check https://github.com/osrf/sdformat/issues/31 -->
                        <!-- https://github.com/osrf/gazebo/blob/gazebo11/gazebo/physics/bullet/BulletSurfaceParams.cc -->
                        <torsional>
                            <surface_radius>${puck_radius}</surface_radius>
                        </torsional>
                        <ode>
                            <mu>${lateral_friction}</mu>
                            <mu2>${lateral_friction}</mu2>
                        </ode>
                    </friction>
                    <contact>
                        <collide_bitmask>${collide_bitmask}</collide_bitmask>
                        <ode>
                            <kp>1e9</kp>
                            <max_vel>10</max_vel>
                        </ode>
                    </contact>
                </surface>
            </collision>
            <material>Gazebo/Red</material>
        </gazebo>

        <gazebo>
            <updateRate>100.0</updateRate>
            <plugin name="puck_tf_plugin" filename="libpuck_tf_plugin.so">
            </plugin>
        </gazebo>

    </xacro:macro>

    <xacro:puck puck_name="$(arg puck_name)" parent="$(arg parent)" collide_bitmask="$(arg collide_bitmask)" color="$(arg color)"/>
</robot>

